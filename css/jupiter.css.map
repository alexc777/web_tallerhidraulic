{"version":3,"sources":["ed-grid/components/_base.scss","ed-grid/components/_core.scss","ed-grid/components/_buttons.scss","ed-grid/components/_helpers.scss","ed-grid/components/_flexbox.scss","ed-grid/components/_visibility.scss","ed-grid/components/_video.scss","ed-grid/components/_css-helpers.scss","jupiter.scss","ed-grid/components/_media-queries.scss","layouts/_menu.scss","ed-grid/components/_ed-menu.scss","_variables.scss","layouts/_home.scss","ed-grid/components/_grid.scss","layouts/_footer.scss"],"names":[],"mappings":"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","file":"jupiter.css","sourcesContent":["// RWD Bases\r\n*,\r\n*:before,\r\n*:after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  margin      : 0;\r\n  font-family : sans-serif;\r\n}\r\n\r\n// Imágenes responsive\r\nimg {\r\n  max-width : 100%;\r\n  height    : auto;\r\n}\r\n\r\na {\r\n  text-decoration : none;\r\n\r\n  &:hover { text-decoration : underline }\r\n}\r\n","// placeholder para ed-container\r\n%ed-container {\r\n  display      : flex;\r\n  flex-wrap    : wrap;\r\n  max-width    : $max-width;\r\n  margin-left  : auto;\r\n  margin-right : auto;\r\n  width        : 100%;\r\n}\r\n\r\n// placeholder para ed-item\r\n%ed-item {\r\n  margin        : 0;\r\n  padding-left  : $gutter;\r\n  padding-right : $gutter;\r\n}\r\n\r\n/// mixin para crear un ed-container\r\n/// Description hace que el elemento sea un contenedor, esto dota al elemento para que tambien sea un flex-container.\r\n/// @group layouts\r\n/// @author  Alvaro Felipe\r\n/// @example scss\r\n/// .container {\r\n///   @include edContainer;\r\n///}\r\n@mixin edContainer {\r\n  @extend %ed-container;\r\n\r\n  @if $devMode == true {\r\n    @include devModeContainer();\r\n  }\r\n}\r\n\r\n/// Hace que un elemento siempre mida el 100% del ancho disponible\r\n/// @group layouts\r\n/// @author Alvaro Felipe\r\n/// @example scss\r\n/// .full {\r\n///   @include full;\r\n/// }\r\n@mixin full {\r\n  max-width : 100%;\r\n}\r\n\r\n@mixin edItemWidth($currentBp, $prevBp, $coreBp){\r\n  // Si el tamaño actual es diferente al previo\r\n  // asignará el ancho en porcentaje\r\n  @if $currentBp != $prevBp{\r\n    @if $currentBp < 1 {\r\n      @include from($coreBp){\r\n        width : $currentBp * 100%;\r\n      }\r\n    }\r\n    @else {\r\n      @include from($coreBp){\r\n        width : $currentBp * 1%;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/// mixin para crear un ed-item\r\n/// Description\r\n/// Los argumentos que acepta son las diferentes medidas que tendra el elemento en diferentes resoluciones de pantalla.\r\n/// Las medidas pueden especificarse como porcentajes ( %  ) o como fracciones (1/3, 3/3 o 3/6, 2/6).\r\n/// @group layouts\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $s - para resoluciones entre 0px y 640px\r\n/// @param   {number} $m - para resoluciones entre 640px y 1024px\r\n/// @param   {number} $l - para resoluciones entre 1024px y 1440px\r\n/// @param   {number} $xl - para resoluciones desde 1440px en adelante.\r\n/// @example scss\r\n///   .container {\r\n///     @include edContainer;\r\n///   }\r\n///\r\n///   .content {\r\n///     @include edItem(100, 75, 60);\r\n///   }\r\n///   .sidebar {\r\n///     @include edItem(100, 25, 40);\r\n///   }\r\n@mixin edItem($s:100,$m:$s,$l:$m,$xl:$l) {\r\n  @extend %ed-item;\r\n\r\n  @if $devMode == true {\r\n    @include devModeItem();\r\n  }\r\n\r\n  // calcular el ancho para el primer breakpoint\r\n  // por defecto es 100% y se convertirá al porcentaje adecuado\r\n  // según el valor que se le pase\r\n  @if $s == 100 {\r\n    width: 100%;\r\n  } @else if $s < 1 {\r\n    width : $s * 100%;\r\n  } @else {\r\n    width : $s * 1%;\r\n  }\r\n\r\n  // widths for others breakpoints\r\n  // anchos para los demás breakpoints\r\n  @include edItemWidth($m,$s,m); //medium\r\n  @include edItemWidth($l,$m,l); //large\r\n  @include edItemWidth($xl,$l,xl); //xlarge\r\n}\r\n\r\n// crear un ed-container\r\n.#{$container} { @include edContainer() }\r\n\r\n// crear un ed-item\r\n.#{$item} {\r\n  @include edItem();\r\n\r\n  // un ed-item a la vez puede ser ed-container\r\n  // para evitar anidaciones innecesarias\r\n  &.#{$container}{\r\n    padding-left : 0;\r\n    padding-right : 0;\r\n  }\r\n}\r\n\r\n// Breakpoints\r\n@mixin coreGrid(){\r\n  @each $size, $screen-size in $breakpoints{\r\n    @if $size == s {\r\n      @for $i from 1 through 20 {\r\n        .s-#{$i*5},\r\n        .#{$item}.s-#{$i*5} {\r\n          width: $i * 5%;\r\n        }\r\n      }\r\n      @each $fraction in $fractions{\r\n        @for $i from 1 through $fraction{\r\n          .s-#{$i}-#{$fraction},\r\n          .#{$item}.s-#{$i}-#{$fraction} {\r\n            width: (100% / $fraction) * $i;\r\n          }\r\n        }\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        @for $i from 1 through 20 {\r\n          .#{$size}-#{$i*5},\r\n          .#{$item}.#{$size}-#{$i*5}{\r\n            width: $i * 5%;\r\n          }\r\n        }\r\n        @each $fraction in $fractions {\r\n          @for $i from 1 through $fraction{\r\n            .#{$size}-#{$i}-#{$fraction},\r\n            .#{$item}.#{$size}-#{$i}-#{$fraction} {\r\n              width: (100% / $fraction) * $i\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","%button {\r\n  display         : inline-block;\r\n  padding         : .8em 1.6em;\r\n  cursor          : pointer;\r\n  margin          : 1em;\r\n  border          : none;\r\n  text-decoration : none;\r\n}\r\n\r\n@mixin edgridButton($bg-color: #ddd,$front-color: #333,$style: default) {\r\n  @extend    %button;\r\n  background : $bg-color;\r\n  color      : $front-color;\r\n\r\n  &:hover {\r\n    background      : darken($bg-color, 5);\r\n    text-decoration : none;\r\n  }\r\n\r\n  &:active {\r\n    transform : scale(.97);\r\n  }\r\n\r\n  // estilos del boton (radius o round)\r\n  @if $style == radius {\r\n    border-radius : .25em;\r\n  } @else if $style == round {\r\n    border-radius : 1.25em;\r\n  }\r\n}\r\n","/// Añade padding a los lados para compenzar el gutter de EDgrid.\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $numero - La cantidad de padding (1 == 1 gutter == 15px).\r\n/// @example scss\r\n/// Si el número es 0 el padding se elimina.\r\n///   .selector1 { @include padding(3) }\r\n@mixin padding($numero:1){\r\n  padding-left  : $gutter * $numero;\r\n  padding-right : $gutter * $numero;\r\n}\r\n\r\n/// Elimina los paddings horizontales de todos los hijos directos\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @example scss\r\n///   .selector2 { @include noPaddingContainer; }\r\n@mixin noPaddingContainer(){\r\n  > .#{$item} { @include padding(0) }\r\n}\r\n\r\n/// Hace que un elemento tenga la proporcion de aspecto especificada.\r\n/// Las propiedades de alinecion con flexbox, no funcionaran en este elemento\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n@mixin ratio($h,$v) {\r\n  $width         : 100%;\r\n  width          : $width;\r\n  height         : 0;\r\n  overflow       : hidden;\r\n  padding-bottom : $width * ($v/$h);\r\n}\r\n\r\n/// Limpia los floats.\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @example [scss | sass] - Usage\r\n///   .clearfix {\r\n///     @include clearfix;\r\n///   }\r\n@mixin clearfix {\r\n  &:before,\r\n  &:after {\r\n    content : \"\";\r\n    width   : 100%;\r\n    display : table;\r\n    clear   : both;\r\n  }\r\n}\r\n/// Alinea el elemento a la derecha\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $width - Ancho del elemento (con su unidad)\r\n/// @param   {number} $margin-left - cantidad de margen derecho (opcional)\r\n/// @example scss\r\n///   .fb-icon {\r\n///     @include toRight(20%, 1em);\r\n///   }\r\n@mixin toRight($width:auto,$margin-left:1em){\r\n  float       : right;\r\n  width       : $width;\r\n  margin-left : $margin-left;\r\n}\r\n\r\n/// Alinea el elemento a la izquierda\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $width - Ancho del elemento (con su unidad)\r\n/// @param   {number} $margin-right - cantidad de margen izquierdo (opcional)\r\n/// @example scss\r\n///   .fb-icon {\r\n///     @include toLeft(20%, 1em);\r\n///   }\r\n@mixin toLeft($width:auto,$margin-right:1em){\r\n  float        : left;\r\n  width        : $width;\r\n  margin-right : $margin-right;\r\n}\r\n\r\n/// Centra un elemento\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $width - Ancho del elemento (con su unidad)\r\n/// @example scss\r\n///   .fb-icon {\r\n///     @include toCenter(20%);\r\n///   }\r\n@mixin toCenter($width:auto){\r\n  display      : block;\r\n  width        : $width;\r\n  margin-left  : auto;\r\n  margin-right : auto;\r\n  text-align   : center;\r\n}\r\n/// Hace al elemento circular.\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @example scss\r\n///   .item::before {\r\n///     content: \"\";\r\n///     width: 150px;\r\n///     height: 150px;\r\n///     display: block;\r\n///     @include circle;\r\n///   }\r\n@mixin circle { border-radius : 50% }\r\n\r\n/// Hace que el elemento ocupe el 100% de su contenedor.\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @example\r\n///   .header {\r\n///     @include full;\r\n///   }\r\n@mixin full(){\r\n  width     : 100%;\r\n  max-width : 100%;\r\n  clear     : both;\r\n}\r\n/// Hace que un elemento se quede pegado en la parte inferior de la pagina indistintamente del tamaño del contenido del sitio.\r\n/// @group   helpers\r\n/// @author  Alvaro Felipe\r\n/// @example scss\r\n///    .main-footer {\r\n///      width: 100%;\r\n///      display: block;\r\n///      height: 150px;\r\n///      @include stickyFooter;\r\n///    }\r\n@mixin stickyFooter {\r\n  @at-root {\r\n    body {\r\n      display        : flex;\r\n      flex-direction : column;\r\n      min-height     : 100vh;\r\n    }\r\n  }\r\n\r\n  margin-top : auto;\r\n}\r\n\r\n@mixin cssStyckyFooter {\r\n  display        : flex;\r\n  flex-direction : column;\r\n  min-height     : 100vh;\r\n\r\n  > footer { margin-top : auto }\r\n}\r\n\r\n// Versiones CSS\r\n@mixin helpers {\r\n  .to-center                {\r\n    display : block;\r\n    margin-right : auto;\r\n    margin-left : auto;\r\n\r\n    &.ed-container {\r\n      display : flex;\r\n    }\r\n  }\r\n  .to-left                  { @include toLeft()             }\r\n  .to-right                 { @include toRight()            }\r\n  .full                     { @include full()               }\r\n  .circle                   { @include circle()             }\r\n  .clearfix                 { @include clearfix()           }\r\n  .no-padding.#{$container} { @include noPaddingContainer() }\r\n  .no-padding.#{$item}      { @include padding(0)           }\r\n  .padding                  { @include padding(1)           }\r\n  .padding-2                { @include padding(2)           }\r\n  .padding-3                { @include padding(3)           }\r\n  body.sticky-footer        { @include cssStyckyFooter()    }\r\n}\r\n\r\n","@mixin flexOrder {\r\n  // Solo existe para css, es innecesario en Sass (una sola línea)\r\n  @each $size, $screen-size in $breakpoints{\r\n    @if $size == s {\r\n      @for $i from 1 through 10 {\r\n        .#{$size}-order-#{$i} {\r\n          order: $i;\r\n        }\r\n      }\r\n    } @else {\r\n      @media screen and (min-width: $screen-size){\r\n        @for $i from 1 through 10 {\r\n          .#{$size}-order-#{$i} {\r\n            order: $i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Alineacion en el main axis\r\n// Aplican al flex-container\r\n@mixin flex {\r\n  display   : flex;\r\n  flex-wrap : wrap;\r\n}\r\n\r\n@mixin mainJustify {\r\n  @include flex;\r\n  justify-content : space-between;\r\n}\r\n\r\n@mixin cssMainJustify {\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-justify {\r\n        @include flex;\r\n        justify-content : space-between;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-justify {\r\n          @include flex;\r\n          justify-content : space-between;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mainDistribute {\r\n  @include flex;\r\n  justify-content : space-around;\r\n}\r\n\r\n@mixin cssMainDistribute {\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-distribute {\r\n        @include flex;\r\n        justify-content : space-around;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-distribute {\r\n          @include flex;\r\n          justify-content : space-around;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mainCenter {\r\n  @include flex;\r\n  justify-content : center;\r\n}\r\n\r\n@mixin cssMainCenter {\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-main-center {\r\n        @include flex;\r\n        justify-content : center;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-main-center {\r\n          @include flex;\r\n          justify-content : center;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mainStart{\r\n  @include flex;\r\n  justify-content : flex-start;\r\n}\r\n\r\n@mixin cssMainStart{\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-main-start {\r\n        @include flex;\r\n        justify-content : flex-start;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-main-start {\r\n          @include flex;\r\n          justify-content : flex-start;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mainEnd{\r\n  @include flex;\r\n  justify-content : flex-end;\r\n}\r\n\r\n@mixin cssMainEnd{\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-main-end {\r\n        @include flex;\r\n        justify-content : flex-end;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-main-end {\r\n          @include flex;\r\n          justify-content : flex-end;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Al inicio en el cross axis para CSSCore\r\n@mixin crossStart{\r\n  @include flex;\r\n  align-items   : flex-start;\r\n  align-content : flex-start;\r\n}\r\n\r\n@mixin cssCrossStart{\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-cross-start {\r\n        @include flex;\r\n        align-items   : flex-start;\r\n        align-content : flex-start;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-cross-start {\r\n          @include flex;\r\n          align-items   : flex-start;\r\n          align-content : flex-start;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Al centro en el cross axis para CSSCore\r\n@mixin crossCenter {\r\n  @include flex;\r\n  align-items   : center;\r\n  align-content : center;\r\n}\r\n\r\n@mixin cssCrossCenter {\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == 0 {\r\n      .#{$size}-cross-center {\r\n        @include flex;\r\n        align-items   : center;\r\n        align-content : center;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-cross-center {\r\n          @include flex;\r\n          align-items   : center;\r\n          align-content : center;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Al final en el cross axis para CSSCore\r\n@mixin crossEnd {\r\n  @include flex;\r\n  align-items   : flex-end;\r\n  align-content : flex-end;\r\n}\r\n\r\n@mixin cssCrossEnd {\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-cross-end {\r\n        @include flex;\r\n        align-items   : flex-end;\r\n        align-content : flex-end;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-cross-end {\r\n          @include flex;\r\n          align-items   : flex-end;\r\n          align-content : flex-end;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Orientación del container\r\n@mixin flexReverse {\r\n  @include flex;\r\n  flex-direction : row-reverse;\r\n}\r\n\r\n@mixin cssFlexReverse{\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-reverse {\r\n        @include flex;\r\n        flex-direction : row-reverse;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-reverse {\r\n          @include flex;\r\n          flex-direction : row-reverse;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin flexColumn {\r\n  @include flex;\r\n  flex-direction : column;\r\n}\r\n\r\n@mixin cssFlexColumn {\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-column {\r\n        @include flex;\r\n        flex-direction : column;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-column {\r\n          @include flex;\r\n          flex-direction : column;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin flexColumnReverse {\r\n  @include flex;\r\n  flex-direction : column-reverse;\r\n}\r\n\r\n@mixin cssFlexColumnReverse {\r\n  @each $size, $screen-size in $breakpoints {\r\n    @if $size == s {\r\n      .#{$size}-column-reverse {\r\n        @include flex;\r\n        flex-direction : column-reverse;\r\n      }\r\n    } @else {\r\n      @media all and (min-width: $screen-size){\r\n        .#{$size}-column-reverse {\r\n          @include flex;\r\n          flex-direction : column-reverse;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Centrado absoluto (vertical y horizontal)\r\n@mixin flexCenter($child: null) {\r\n  display         : flex;\r\n  justify-content : center;\r\n  align-items     : center;\r\n  text-align      : center;\r\n\r\n  @if $child != null {\r\n    #{$child}{\r\n      margin : auto;\r\n    }\r\n  }\r\n}\r\n\r\n// Versiones CSS Helpers\r\n// si se omite el breakpoint se aplica siempre\r\n@mixin flexCssHelpers {\r\n  .main-justify        { @include mainJustify       }\r\n  .main-distribute     { @include mainDistribute    }\r\n  .main-center         { @include mainCenter        }\r\n  .main-start          { @include mainStart         }\r\n  .main-end            { @include mainEnd           }\r\n  .cross-start         { @include crossStart        }\r\n  .cross-center        { @include crossCenter       }\r\n  .cross-end           { @include crossEnd          }\r\n  .flex-reverse        {  @include flexReverse      }\r\n  .flex-column         { @include flexColumn        }\r\n  .flex-column-reverse { @include flexColumnReverse }\r\n  .abcenter            { @include flexCenter        }\r\n}\r\n","/// Muestra un elemento a partir del breakpoint especificado\r\n/// @group   visibility\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $bp - breakpoint a partir del cual mostrar el elemento\r\n/// @example scss\r\n///   .sidebar {\r\n///     @include showFrom(l);\r\n///   }\r\n@mixin showFrom($bp){\r\n  @include to($bp){\r\n    display : none;\r\n  }\r\n}\r\n\r\n/// Muestra un elemento por debajo del breakpoint especificado.\r\n/// @group   visibility\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $bp - breakpoint.\r\n/// @example scss\r\n///   .sidebar {\r\n///     @include showFrom(l);\r\n///   }\r\n@mixin showTo($bp){\r\n  @include from($bp){\r\n    display : none;\r\n  }\r\n}\r\n\r\n/// Oculta un elemento a partir del breakpoint especificado\r\n/// @group   visibility\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $bp - breakpoint a partir del cual ocultar el elemento\r\n/// @example scss\r\n///   .sidebar {\r\n///     @include hideFrom(l);\r\n///   }\r\n@mixin hideFrom($bp){\r\n  @include from($bp){\r\n    display : none;\r\n  }\r\n}\r\n\r\n/// Oculta un elemento por debajo del breakpoint especificado.\r\n/// @group   visibility\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $bp - breakpoint\r\n/// @example scss\r\n///   .sidebar {\r\n///     @include hideFrom(l);\r\n///   }\r\n@mixin hideTo($bp){\r\n  @include to($bp){\r\n    display : none;\r\n  }\r\n}\r\n\r\n// Version css\r\n@mixin visibility {\r\n  @each $size, $screenSize in $breakpoints {\r\n    .from-#{$size} { @include showFrom($size) }\r\n    .to-#{$size} { @include showTo($size) }\r\n  }\r\n}\r\n","/// Videos responsive\r\n/// Este mixing se debe aplicar al contenedor del video.\r\n/// @group   video\r\n/// @author  Alvaro Felipe\r\n/// @param   {selector} $video - selector del elemento video\r\n/// @example scss\r\n///     #ed-cursos {\r\n///       @include edVideo(\"video\");\r\n///     }\r\n\r\n@mixin edVideo ($video: null) {\r\n  height         : 0;\r\n  overflow       : hidden;\r\n  padding-bottom : 56.25%;\r\n  position       : relative;\r\n\r\n  @if $video != null {\r\n    #{$video} {\r\n      position : absolute;\r\n      top      : 0;\r\n      left     : 0;\r\n      width    : 100%;\r\n      height   : 100%;\r\n    }\r\n  } @else {\r\n    > iframe,\r\n    > video,\r\n    > .video {\r\n      position : absolute;\r\n      top      : 0;\r\n      left     : 0;\r\n      width    : 100%;\r\n      height   : 100%;\r\n    }\r\n  }\r\n}\r\n","@if $cssHelpers == true {\r\n  @include coreGrid();\r\n  @include helpers();\r\n  @include flexCssHelpers();\r\n  @include visibility();\r\n\r\n  .ed-video { @include edVideo() }\r\n  .button   { @include edgridButton()  }\r\n}\r\n","// variables sass\r\n@import \"variables\";\r\n\r\n//componentes\r\n$cssCore: false;\r\n$cssHelpers: true;\r\n@import \"ed-grid/ed-grid\";\r\n\r\n// Variables Css\r\n:root {\r\n  --font-title: 20px;\r\n  --font-text: 15px;\r\n  --mtopsectio: 40px;\r\n  --mbotomsectio: 40px;\r\n  --mtop: 20px;\r\n  --mbotom: 20px;\r\n\r\n  @include to(m) {\r\n    --font-title: 18px;\r\n    --font-text: 13px;\r\n    --mtop: 15px;\r\n    --mbotom: 15px;\r\n    --mtopsectio: 20px;\r\n  --mbotomsectio: 20px;\r\n  }\r\n}\r\n\r\n// styles theme prevision\r\n@import \"layouts/menu\";\r\n@import \"layouts/home\";\r\n@import \"layouts/footer\";\r\n\r\n.spd{\r\n  padding-right: 0 !important;\r\n}\r\n\r\n.spi{\r\n  padding-left: 0 !important;\r\n}\r\n\r\nbody {\r\n  background: #fff !important;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  font-family: 'Open Sans', sans-serif;\r\n}\r\n\r\nimg.wp-post-image, article img, figure, img, #secondary img {\r\n  max-width: 100%;\r\n  height: auto; \r\n}","/// Devuelve true si el breakpoint es parte del core\r\n/// @group mq\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $bp - breakpoint\r\n/// @example scss\r\n///    .elemento {\r\n///      @if isCoreBreakpoint(l) {\r\n///        $customBp : 720px;\r\n///        ....\r\n///      }\r\n///    }\r\n@function isCoreBreakpoint($bp){\r\n  @if map-get($breakpoints,$bp) {\r\n    @return true\r\n  } @else {\r\n    @return false\r\n  }\r\n}\r\n\r\n/// Devuelve true si el breakpint es válido (em, rem, px)\r\n/// @group   mq\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $bp - breakpoint a verificar.\r\n@function isValidBreakpoint($bp){\r\n  @if type-of($bp) == number and (unit($bp) == 'px' or unit($bp) == 'em' or unit($bp) == 'rem') {\r\n    @return true\r\n  } @else {\r\n    @return false\r\n  }\r\n}\r\n\r\n/// Obtiene un breakpoint del core\r\n/// @group   mq\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $bp - breakpoint a obtener.\r\n@function getBp($bp){\r\n  @return map-get($breakpoints,$bp)\r\n}\r\n\r\n/// Convierte un valor en em o rem a px\r\n/// @group   mq\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $value - var a convertir a pixeles.\r\n@function toPx($value){\r\n  @if type-of($value) == number {\r\n    @if unit($value) == 'em'{\r\n      @return ($value / 1em) * 16px;\r\n    } @else if unit($value) == 'rem'{\r\n      @return ($value / 1rem) * 16px\r\n    } @else if unit($value) == 'px' {\r\n      @return $value;\r\n    } @else {\r\n      @error \"La funcion toPx() solo acepta numeros en em o rem o px\"\r\n    }\r\n  } @else {\r\n    @error \"La funcion toPx() solo acepta numeros en em o rem\"\r\n  }\r\n}\r\n\r\n/// From (mayor que $bp)\r\n/// @group   mq\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $from - breakpoint\r\n/// @example scss\r\n///     .elemento {\r\n///       width: 30%;\r\n///       @include from(m) {\r\n///         width: 50%;\r\n///       }\r\n///     }\r\n@mixin from($from){\r\n  // Si el bp es del core de EDgrid\r\n  @if isCoreBreakpoint($from){\r\n    // no imprime media query para tamaño s\r\n    @if $from == s {\r\n      @content\r\n    }\r\n    // imprime media query en los otros tamaños\r\n    @else {\r\n      @media screen and (min-width: getBp($from)){ @content }\r\n    }\r\n  }\r\n  // Si el bp no es del core de EDgrid pero es una unidad válida\r\n  @else if isValidBreakpoint($from){\r\n    @media screen and (min-width: $from){ @content }\r\n  }\r\n  // Error\r\n  @else {\r\n    @error 'El mixin from() solo puede recibir un breakpoint del Core (#{map-keys($breakpoints)}) o un número en px, em o rem'\r\n  }\r\n}\r\n\r\n/// To (es menor que $to)\r\n/// @group   mq\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $to - breakpoint\r\n/// @example scss\r\n///     .elemento {\r\n///       width: 50%;\r\n///       @include to(m) {\r\n///         width: 30%;\r\n///       }\r\n///     }\r\n@mixin to($to){\r\n  // Si es un breakpoint del core\r\n  @if isCoreBreakpoint($to){\r\n    @if $to == s {\r\n      @content;\r\n    } @else {\r\n      @media screen and (max-width : getBp($to) - 1px) { @content }\r\n    }\r\n  }\r\n  // Si es un breakpoint válido (px, em, rem)\r\n  @else if isValidBreakpoint($to){\r\n    @media screen and (max-width: toPx($to) - 1px){ @content }\r\n  }\r\n  // Si no es un breakpoint válido lanzar error\r\n  @else {\r\n    @error 'El mixin to() solo puede recibir un breakpoint del Core (#{map-keys($breakpoints)}) o un número en px, em o rem'\r\n  }\r\n}\r\n\r\n/// fromTo la regla se ejecuta entre ambos breakpoints.\r\n/// @group   mq\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $from - breakpoint desde que medida se iniciara la regla.\r\n/// @param   {number} $to - breakpoint hasta que medida se ejecutara la regla.\r\n/// @example scss\r\n///     .elemento {\r\n///       background-color: cyan;\r\n///       @include fromTo(s, l) {\r\n///         background-color: darken(cyan, .8);\r\n///       }\r\n///     }\r\n@mixin fromTo($from,$to){\r\n  // Si ambos son breakpoints del core\r\n  @if isCoreBreakpoint($from) and isCoreBreakpoint($to){\r\n    @if getBp($to) > getBp($from) {\r\n      @media screen and (min-width : getBp($from)) and (max-width : getBp($to) - 1px) {\r\n        @content\r\n      }\r\n    } @else {\r\n      @error \"El segundo argumento del mixin fromTo debe ser mayor que el primero\"\r\n    }\r\n  }\r\n\r\n  // Si solo $from es breakpoint del core\r\n  @else if isCoreBreakpoint($from) and not isCoreBreakpoint($to){\r\n    @if isValidBreakpoint($to) {\r\n      @if toPx($to) > toPx(getBp($from)) {\r\n        @media screen and (min-width : getBp($from)) and (max-width : toPx($to) - 1px) {\r\n          @content\r\n        }\r\n      } @else {\r\n        @error \"El segundo argumento del mixin fromTo debe ser mayor que el primero\"\r\n      }\r\n    } @else {\r\n      @error \"El segundo argumento del mixin fromTo() debe ser un breakpoint del Core (#{map-keys($breakpoints)}) o un número en px, em o rem\"\r\n    }\r\n  }\r\n\r\n  // Si solo $to es breakpoint del core\r\n  @else if not isCoreBreakpoint($from) and isCoreBreakpoint($to) {\r\n    @if isValidBreakpoint($from) {\r\n      @if toPx(getBp($to)) > toPx($from){\r\n        @media screen and (min-width : $from) and (max-width : getBp($to) - 1px) {\r\n          @content\r\n        }\r\n      } @else {\r\n        @error \"El segundo argumento del mixin fromTo debe ser mayor que el primero\"\r\n      }\r\n    }\r\n    @else {\r\n      @error \"El primer argumento del mixin fromTo() debe ser un breakpoint del Core (#{map-keys($breakpoints)}) o un número en px, em o rem\"\r\n    }\r\n  }\r\n\r\n  // Si no son breakpoints del core pero son breakpoints válidos (px, em, rem)\r\n  @else if isValidBreakpoint($from) and isValidBreakpoint($to){\r\n    @if toPx($to) > toPx($from) {\r\n      @media screen and (min-width : $from) and (max-width : toPx($to) - 1px) {\r\n        @content\r\n      }\r\n    } @else {\r\n      @error \"El segundo argumento del mixin fromTo debe ser mayor que el primero\"\r\n    }\r\n  }\r\n\r\n  // Si al menos hay un breakpoint inválido\r\n  @else {\r\n    @error 'Los argumentos del mixin fromTo() deben ser breakpoints del Core (#{map-keys($breakpoints)}) o números en px, em o rem';\r\n  }\r\n}\r\n",".navbar-nav .nav-link {\r\n  text-transform: none;\r\n  font-weight: 400;\r\n  color: $negro;\r\n  border: none;\r\n\r\n  @include to(m) {\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.main-menu-container {\r\n  width: 100%;\r\n  z-index: 1000;\r\n  background: transparent;\r\n\r\n    @include to(l) {\r\n      padding: 20px 10px;\r\n    }\r\n\r\n    @include to(768px) {\r\n      padding: 20px 10px;\r\n    }\r\n}\r\n\r\n.main-menu {\r\n    @include edMenu(l,navBar);\r\n    a {\r\n        text-transform: none;\r\n        font-weight: 400;\r\n        color: #fff;\r\n        border: none;\r\n        font-size: var(--font-text);\r\n\r\n        &:hover {\r\n          border: none !important;\r\n        }\r\n    }\r\n}\r\n\r\n.main-nav {\r\n  @include edNav('left', l);\r\n  padding: 10px 1rem;\r\n}\r\n\r\n.nav-toggle {\r\n  @include navToggle(20px,$azul);\r\n  @include hideFrom(l);\r\n}\r\n\r\n.modal-backdrop {\r\n  @include to(s) {\r\n    z-index: 999;\r\n  }\r\n}\r\n\r\n.modal-header .close {\r\n  @include to(s) {\r\n    margin-left: 0 !important;\r\n  }\r\n}\r\n\r\n.modal-header {\r\n  @include to(s) {\r\n    border: none !important;\r\n    height: 80px;\r\n    background-size: 100%;\r\n  }\r\n}\r\n\r\n.modal-header .close {\r\n  @include to(s) {\r\n    padding: 0;\r\n  }\r\n}\r\n\r\n.ico_cerrar {\r\n  display: block;\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.modal-content {\r\n  @include to(s) {\r\n    border: none;\r\n    height: 100vh;\r\n  }\r\n}\r\n\r\n.modal-dialog {\r\n  @include to(s) {\r\n    margin: 0;\r\n  }\r\n}","// estilo default del menu\r\n/// Aplica un estilo por defecto al menu.\r\n/// @group   menu\r\n/// @author  Alvaro Felipe\r\n@mixin menuStyleDefault {\r\n  background : #eee;\r\n  li:hover { background : rgba(#000, .1)  }\r\n  ul       { background : darken(#eee, 5) }\r\n  a        { color      : #666            }\r\n}\r\n\r\n// estilo nav para el menu\r\n// incluye el breakpoint que lo cambia a horizontal\r\n@mixin menuStyleNav($bp) {\r\n  $border    : 1px solid rgba(#000, .1);\r\n  background : #EEE;\r\n  border     : $border;\r\n\r\n  li:hover { background : rgba(#000, .1)  }\r\n  ul       { background : darken(#eee, 5) }\r\n  a        { color      : #666            }\r\n\r\n  li {\r\n    border-bottom : $border;\r\n\r\n    &:last-child {\r\n      border-right  : none;\r\n      border-bottom : none;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    border : $border;\r\n\r\n    li {\r\n      border-bottom : $border;\r\n\r\n      &:last-child { border-bottom : none }\r\n    }\r\n  }\r\n\r\n  @include from($bp) {\r\n    > li {\r\n      border-right  : 1px solid rgba(#000, .1);\r\n      border-bottom : none;\r\n    }\r\n  }\r\n}\r\n\r\n/// estilo button para el menú\r\n/// @group   menu\r\n/// @author  Alvaro Felipe\r\n@mixin menuStyleButton {\r\n  li {\r\n    margin-bottom : .5em;\r\n    margin-right  : .5em;\r\n  }\r\n\r\n  a {\r\n    border        : 1px solid rgba(#000, .1);\r\n    background    : #EEE;\r\n    line-height   : 2.5em;\r\n    padding       : 0 1.5em;\r\n    border-radius : 4px;\r\n    color         : #666;\r\n\r\n    &:hover { background : rgba(#000, .1) }\r\n  }\r\n}\r\n\r\n/// mixin que construye el menú sin un tema, solo maqueta\r\n/// @group   menu\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $bp - Breakpoint a partir del cual el menu se volvera horizontal.\r\n/// @param   {number} $style - estilo a usar en el menu las opciones son: [default | nav | button], este argumento es opcional.\r\n/// @example [scss | sass] - Usage\r\n@mixin edMenu($bp,$style:null) {\r\n  width : 100%;\r\n\r\n  &, ul {\r\n    margin-top    : 0;\r\n    margin-bottom : 0;\r\n    padding-left  : 0;\r\n    list-style    : none;\r\n  }\r\n\r\n  li {\r\n    position   : relative;\r\n    list-style : none;\r\n    flex       : auto;\r\n\r\n    // Si es padre de un submenu\r\n    &.parent-submenu {\r\n      display   : flex;\r\n      flex-wrap : wrap;\r\n\r\n      a { flex : auto }\r\n    }\r\n  }\r\n\r\n  //submenus\r\n  ul {\r\n    display  : none;\r\n\r\n    @include to($bp) {\r\n      &.show-submenu {\r\n        display       : block;\r\n        width         : 100%;\r\n        order         : 3;\r\n        margin-left   : 1em;\r\n        margin-bottom : .5em;\r\n      }\r\n    }\r\n  }\r\n\r\n  a {\r\n    display     : block;\r\n    line-height : 3em;\r\n    padding     : 0 1em;\r\n\r\n    &:hover { text-decoration : none }\r\n  }\r\n\r\n  // cambio a horizontal\r\n  @include from($bp) {\r\n    display     : flex;\r\n    align-items : center;\r\n\r\n    a { text-align : center }\r\n\r\n    // Ocultar el botón de expandir en horizontal\r\n    .expand { display : none}\r\n\r\n    ul {\r\n      position    : absolute;\r\n      left        : 0;\r\n      top         : 100%;\r\n      min-width   : 100%;\r\n      white-space : nowrap;\r\n\r\n      a { text-align : left }\r\n\r\n      ul {\r\n        top  : 0;\r\n        left : 100%;\r\n      }\r\n    }\r\n\r\n    // mostrar submenu\r\n    li:hover > ul { display : block }\r\n  }\r\n\r\n  // expand submenu button\r\n  .expand-submenu {\r\n    @include hideFrom($bp);\r\n    $size      : 3em;\r\n    position   : relative;\r\n    right      : 0;\r\n    width      : $size;\r\n    height     : $size;\r\n    cursor     : pointer;\r\n    transition : all .3s;\r\n\r\n    &::after {\r\n      content       : \"\";\r\n      position      : absolute;\r\n      width         : 40%;\r\n      height        : 40%;\r\n      top           : 20%;\r\n      left          : 30%;\r\n      border-left   : ($size * 0.15) solid;\r\n      border-bottom : ($size * 0.15) solid;\r\n      border-radius : ($size * 0.08);\r\n      transform     : rotate(-45deg);\r\n      transition    : all .3s;\r\n    }\r\n\r\n    &.active {\r\n      transform : rotate(180deg);\r\n    }\r\n  }\r\n\r\n  // incluir el estilo del menu si se ha definido\r\n  @if $style == default { @include menuStyleDefault  }\r\n  @if $style == nav     { @include menuStyleNav($bp) }\r\n  @if $style == button  { @include menuStyleButton   }\r\n\r\n  // compilar los mixins en modo CSS\r\n  @if $cssCore == true {\r\n    &.default    { @include menuStyleDefault  }\r\n    &.nav-bar    { @include menuStyleNav($bp) }\r\n    &.button-bar { @include menuStyleButton    }\r\n  }\r\n}\r\n\r\n/// mixin Nav (para el contenedor del menú) \r\n/// @group   menu\r\n/// @author  Alvaro Felipe\r\n/// @param   {string} $direction  - El eje desde donde aparecera el menu. Las opciones son [left | right | top | bottom]\r\n/// @param   {number} $bp  - breakpoint que indica hasta donde debe mostrarse en vertical.\r\n/// @example scss\r\n///   nav {\r\n///     @include edNav(left, m);\r\n///   }\r\n\r\n@mixin edNav($direction, $bp){\r\n  @include to($bp) {\r\n    $lrWidth   : 85%;\r\n    position   : fixed;\r\n    transition : all .3s;\r\n    height     : 100vh;\r\n    z-index    : 200;\r\n    overflow-y : auto;\r\n\r\n    @if $direction == left or $direction == right {\r\n      width : $lrWidth;\r\n    } @else {\r\n      width : 100%;\r\n    }\r\n\r\n    @if $direction == left {\r\n      left : $lrWidth * -1;\r\n\r\n      &.show-menu { left : 0 }\r\n    }\r\n\r\n    @if $direction == right {\r\n      right : $lrWidth * -1;\r\n\r\n      &.show-menu { right : 0 }\r\n    }\r\n\r\n    @if $direction == top {\r\n      width : 100%;\r\n      left : 0;\r\n      top : -100%;\r\n\r\n      &.show-menu { top : 0 }\r\n    }\r\n\r\n    @if $direction == bottom {\r\n      width : 100%;\r\n      left : 0;\r\n      bottom : -100%;\r\n\r\n      &.show-menu { bottom : 0 }\r\n    }\r\n  }\r\n}\r\n\r\n/// Toggle del menu\r\n/// @group   menu\r\n/// @author  Alvaro Felipe\r\n/// @param   {number} $size - especifica el tamaño del elemento toggle\r\n/// @param   {color} $color - especifica el color del toggle.\r\n/// @example scss\r\n///   .menu-toggle {\r\n///     @include navToggle(200px, $black);\r\n///   }\r\n@mixin navToggle($size, $color) {\r\n  $segmentHeight : ($size / 5);\r\n  position       : relative;\r\n  z-index        : 300;\r\n  width          : $size * 1.5;\r\n  height         : $size;\r\n  box-shadow     : 0 ($segmentHeight) $color inset;\r\n  cursor         : pointer;\r\n\r\n  &::after,\r\n  &::before {\r\n    content          : \"\";\r\n    position         : absolute;\r\n    width            : 100%;\r\n    height           : ($segmentHeight);\r\n    background-color : $color;\r\n    bottom           : 0;\r\n  }\r\n\r\n  &::after {\r\n    bottom : $segmentHeight * 2;\r\n  }\r\n}\r\n","// colores\r\n$gris: #EBEDED;\r\n$azul: #1b325f;\r\n$negro: #323232;\r\n",".slider_container {\r\n    float: left;\r\n    width: 100%;\r\n    position: relative;\r\n    top: -70px;\r\n}\r\n\r\n.container_info {\r\n    float: left;\r\n    width: 100%;\r\n    margin-top: var(--mtop);\r\n    margin-bottom: var(--mbotom);\r\n    font-size: var(--font-text);\r\n\r\n    p {\r\n        float: left;\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n}\r\n\r\n.works_container {\r\n    float: left;\r\n    width: 100%;\r\n\r\n    @include grid('.items_works', 1 1 3 3 15px);\r\n\r\n    .items_works {\r\n        .item_title {\r\n            float: left;\r\n            width: 100%;\r\n            margin-bottom: var(--mbotom);\r\n\r\n            p {\r\n                float: left;\r\n                width: 100%;\r\n                font-size: var(--font-title);\r\n                color: $azul;\r\n                font-weight: bold;\r\n                text-align: center;\r\n                margin: 0;\r\n            }\r\n        }\r\n\r\n        .body_item {\r\n            float: left;\r\n            width: 100%;\r\n\r\n            .ico_rapido {\r\n                float: left;\r\n                width: 100%;\r\n                height: 150px;\r\n                background: url('img/ico-rapido.svg') no-repeat center;\r\n                background-size: 50%;\r\n\r\n                @include to(m) {\r\n                    background-size: 40%\r\n                }\r\n            }\r\n            \r\n            .ico_seguro {\r\n                float: left;\r\n                width: 100%;\r\n                height: 150px;\r\n                background: url('img/ico-seguro.svg') no-repeat center;\r\n                background-size: 35%;\r\n\r\n                @include to(m) {\r\n                    background-size: 30%\r\n                }\r\n            }\r\n            \r\n            .ico_precio {\r\n                float: left;\r\n                width: 100%;\r\n                height: 150px;\r\n                background: url('img/ico-precio.svg') no-repeat center;\r\n                background-size: 35%;\r\n\r\n                @include to(m) {\r\n                    background-size: 30%\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.contianer_productos {\r\n    float: left;\r\n    width: 100%;\r\n    margin-top: var(--mtopsectio);\r\n    margin-bottom: var(--mbotomsectio);\r\n\r\n    h1 {\r\n        float: left;\r\n        width: 100%;\r\n        font-size: var(--font-title);\r\n        font-weight: bold;\r\n        text-align: center;\r\n    }\r\n\r\n    .card_producutos {\r\n        float: left;\r\n        width: 100%;\r\n        @include grid('.card_item', 1 1 3 3 15px);\r\n        justify-items: center;\r\n        margin-top: var(--mtop);\r\n\r\n        .card_item {\r\n            float: left;\r\n            width: 60%;\r\n            border-radius: 10px;\r\n            overflow: hidden;\r\n            background: #f9f9f9;\r\n\r\n            .card_header {\r\n                float: left;\r\n                width: 100%;\r\n                background: $azul;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                padding: 10px;\r\n\r\n                p {\r\n                    font-size: var(--font-text);\r\n                    color: #fff;\r\n                    font-weight: bold;\r\n                    margin: 0;\r\n                }\r\n            }\r\n            \r\n            .card_body {\r\n                float: left;\r\n                width: 100%;\r\n                margin-top: 15px;\r\n                padding: 0 10px;\r\n\r\n                .card_description {\r\n                    margin-bottom: var(--mbotom);\r\n                    p {\r\n                        float: left;\r\n                        width: 100%;\r\n                        font-size: var(--font-text);\r\n                        margin: 0;\r\n                    }\r\n                }\r\n\r\n                .icon_rodamiento {\r\n                    float: left;\r\n                    width: 100%;\r\n                    height: 150px;\r\n                    background: url('img/ico-rodamiento.svg') no-repeat center;\r\n                    background-size: 50%;\r\n                }\r\n                \r\n                .ico_maquinaria {\r\n                    float: left;\r\n                    width: 100%;\r\n                    height: 150px;\r\n                    background: url('img/ico-maquinaria.svg') no-repeat center;\r\n                    background-size: 50%;\r\n                }\r\n                \r\n                .ico_piezas {\r\n                    float: left;\r\n                    width: 100%;\r\n                    height: 150px;\r\n                    background: url('img/ico-piezas.svg') no-repeat center;\r\n                    background-size: 50%;\r\n                }\r\n            }\r\n\r\n            .card_footer {\r\n                margin-top: 15px;\r\n                float: left;\r\n                width: 100%;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n\r\n                .btn_contacto {\r\n                    float: left;\r\n                    width: 75%;\r\n                    @include edgridButton($azul,#fff,radius);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","// returns grid-item width based on columns number and gutter\r\n// retorna el ancho del grid-item basado en el número de columnas y el gutter\r\n@function item-width($width,$gutter){\r\n  @return calc(#{$width} - #{$gutter});\r\n}\r\n\r\n// asigns grid-item width for each breakpoint\r\n@mixin columnWidth($currentBreakpoint, $previousBreakpoint, $edgridBreakpoint ,$gutter,$gridItem){\r\n  // check if current breakpoint is not equal to previous breakpoint\r\n  @if $currentBreakpoint != $previousBreakpoint {\r\n    @include from($edgridBreakpoint){\r\n      $width: 100% / $currentBreakpoint;\r\n      & > #{$gridItem}{\r\n        width : item-width($width,$gutter);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n| Mixin para crear cuadriculas\r\n|\r\n| $gridItemSelector: nombre del selector CSS de cada item de la cuadricula\r\n| $listColumns:\r\n|              * lista de numeros de columnas en cada breakpoint (separados por espacios). Ej: 1 2 3 4\r\n|              * el numero de columnas del ultimo breakpoint se hereda a breakpoints superiores\r\n| $gutter: separación entre cada item de la cuadricula (opcional)\r\n|\r\n*/\r\n/// mixin para crear cuadriculas\r\n/// @group   grid\r\n/// @author  Alvaro Felipe\r\n/// @param   {element} $selector - nombre del selector css de cada item de la cuadricula.\r\n/// @param   {list} $listColumns - lista de numeros de columnas en cada breakpoint. Ej: (1,2,3,4), el numero de columnas del ultimo breakpoint se hereda a breakpoints superiores\r\n/// @param   {number} $gutter - el espaciado entre cada elemento de la cuadricula. Por defecto es de 1em.\r\n/// @example scss\r\n///   .gallery {\r\n///     @include grid(li, 5 );\r\n///   }\r\n\r\n@mixin grid($gridItemSelector,$listColumns,$gutter:1em){\r\n // $width sirve para calcular el ancho de cada item\r\n  $width       : 100% / nth($listColumns,1);\r\n\r\n  // elimina el espaciado vertical de las imágenes\r\n  img {\r\n    display : block;\r\n  }\r\n\r\n  display      : flex;\r\n  flex-wrap    : wrap;\r\n  margin-left  : -($gutter / 2);\r\n  margin-right : -($gutter / 2);\r\n\r\n  // Evitar scroll horizontal\r\n  @at-root {\r\n    body {\r\n      overflow-x: hidden;\r\n    }\r\n  }\r\n\r\n  // por si el contenedor es un ul\r\n  @if $gridItemSelector == li {\r\n    margin     : 0;\r\n    padding    : 0;\r\n    list-style : none;\r\n\r\n    li {\r\n      margin-left : 0;\r\n      list-style  : none;\r\n    }\r\n  }\r\n\r\n  & > #{$gridItemSelector} {\r\n    width  : item-width($width,$gutter);\r\n    margin : $gutter / 2;\r\n  }\r\n\r\n  // calculate grid item width for each breakpoint\r\n  $indice: 1;\r\n  $longListColumns: length($listColumns);\r\n  @each $size, $_ in $breakpoints{\r\n    @if $indice > 1 and $indice <= $longListColumns{\r\n      @include columnWidth(nth($listColumns,$indice),nth($listColumns,$indice - 1),$size,$gutter,$gridItemSelector);\r\n    }\r\n    $indice: $indice + 1;\r\n  }\r\n\r\n  // Si soporta grid\r\n  @supports (grid-template-areas: 'header') {\r\n    $i: 1;\r\n    $longListColumns: length($listColumns);\r\n\r\n    display: grid;\r\n    grid-gap: $gutter;\r\n    margin-left : 0;\r\n    margin-right : 0;\r\n\r\n    // Restaurar el scroll horizontal (por si se necesitara)\r\n    @at-root {\r\n      body {\r\n        overflow-x: visible;\r\n      }\r\n    }\r\n\r\n    @each $size, $_ in $breakpoints{\r\n      @if $i <= $longListColumns {\r\n        @include from($size) {\r\n          grid-template-columns: repeat(nth($listColumns,$i),1fr);\r\n        }\r\n        $i: $i + 1;\r\n      }\r\n    }\r\n\r\n    // grid-item\r\n    > #{$gridItemSelector} {\r\n      width : 100%;\r\n      margin : 0;\r\n    }\r\n  }\r\n\r\n}\r\n","#wrapper-footer {\r\n    float: left;\r\n    width: 100%;\r\n    background: $gris;\r\n    padding: 15px 0;\r\n    margin-top: auto;\r\n}\r\n\r\n.footer {\r\n    float: left;\r\n    width: 100%;\r\n\r\n    p {\r\n        float: left;\r\n        width: 100%;\r\n        text-align: center;\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n        color: $negro;\r\n        margin-bottom: 5px;\r\n    }\r\n}"]}